(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{217:function(e,t,s){"use strict";s.r(t);var a=s(0),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),s("p",[e._v("安装之后，你就可以在命令行中访问 vue 命令。你可以通过简单运行 vue，看看是否展示出了一份所有可用命令的帮助信息，来验证它是否安装成功。")]),e._v(" "),s("p",[e._v("你还可以用这个命令来检查其版本是否正确：")]),e._v(" "),e._m(6),e._m(7),e._v(" "),e._m(8),e._v(" "),e._m(9),e._m(10),e._v(" "),e._m(11),e._v(" "),e._m(12),s("p",[e._v("你所需要的仅仅是一个 App.vue 文件：")]),e._v(" "),e._m(13),s("p",[e._v("然后在这个 App.vue 文件所在的目录下运行：")]),e._v(" "),e._m(14),e._m(15),e._v(" "),e._m(16),s("p",[e._v("如果需要，你还可以提供一个 index.html、package.json、安装并使用本地依赖、甚至通过相应的配置文件配置 Babel、PostCSS 和 ESLint。")]),e._v(" "),e._m(17),e._v(" "),e._m(18),s("p",[e._v("你也可以使用 vue build 将目标文件构建成一个生产环境的包并用来部署：")]),e._v(" "),e._m(19),s("p",[s("code",[e._v("vue build")]),e._v(" 也提供了将组件构建成为一个库或一个 Web Components 组件的能力。查阅"),s("a",{attrs:{href:"https://cli.vuejs.org/zh/guide/build-targets.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("构建目标"),s("OutboundLink")],1),e._v("了解更多。")]),e._v(" "),e._m(20),e._v(" "),e._m(21),e._v(" "),e._m(22),s("p",[e._v("你会被提示选取一个 preset。你可以选默认的包含了基本的 Babel + ESLint 设置的 preset，也可以选“手动选择特性”来选取需要的特性")]),e._v(" "),e._m(23),s("p",[e._v("使用手动选择功能之后会有以下功能可供选择")]),e._v(" "),e._m(24),s("p",[e._v("继续后续的选择")]),e._v(" "),e._m(25),s("p",[e._v("创建完成之后可以使用以下命令进入项目并运行")]),e._v(" "),e._m(26),e._m(27),e._v(" "),s("p",[e._v("你也可以通过 vue ui 命令以图形化界面创建和管理项目：")]),e._v(" "),e._m(28),s("p",[e._v("上述命令会打开一个浏览器窗口，并以图形化界面将你引导至项目创建的流程。")])])}),[function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"vue-cli的安装使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-cli的安装使用"}},[this._v("#")]),this._v(" @vue/cli的安装使用")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"vue-cli的介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-cli的介绍"}},[this._v("#")]),this._v(" @vue/cli的介绍")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"warning custom-block"},[t("p",{staticClass:"custom-block-title"},[this._v("警告")]),this._v(" "),t("p",[this._v("这份文档是对应 @vue/cli。老版本的 vue-cli 文档请移步这里。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"warning custom-block"},[t("p",{staticClass:"custom-block-title"},[this._v("警告")]),this._v(" "),t("p",[this._v("关于旧版本")]),this._v(" "),t("p",[this._v("Vue CLI 的包名称由 vue-cli 改成了 @vue/cli。 如果你已经全局安装了旧版本的 vue-cli (1.x 或 2.x)，你需要先通过 npm uninstall vue-cli -g 或 yarn global remove vue-cli 卸载它。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"vue-cli的安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-cli的安装"}},[this._v("#")]),this._v(" @vue/cli的安装")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("npm install -g @vue/cli\n# OR\nyarn global add @vue/cli\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("vue --version\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"快速原型开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速原型开发"}},[this._v("#")]),this._v(" 快速原型开发")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("你可以使用 "),t("code",[this._v("vue serve")]),this._v(" 和 "),t("code",[this._v("vue build")]),this._v(" 命令对单个 "),t("code",[this._v("*.vue")]),this._v(" 文件进行快速原型开发，不过这需要先额外安装一个全局的扩展：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("npm install -g @vue/cli-service-global\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("vue serve")]),this._v(" 的缺点就是它需要安装全局依赖，这使得它在不同机器上的一致性不能得到保证。因此这只适用于快速原型开发。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"vue-serve"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-serve"}},[this._v("#")]),this._v(" vue serve")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("Usage: serve [options] [entry]\n\n在开发环境模式下零配置为 .js 或 .vue 文件启动一个服务器\n\n\nOptions:\n\n  -o, --open  打开浏览器\n  -c, --copy  将本地 URL 复制到剪切板\n  -h, --help  输出用法信息\n\n这个指令的用法，在项目根目录找到package.json，scripts的serve下加上就可以\n例：vue-cli-service serve -o\n")])])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("Hello!"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("vue serve\n")])])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[s("code",[e._v("vue serve")]),e._v(" 使用了和 "),s("code",[e._v("vue create")]),e._v(" 创建的项目相同的默认设置 (webpack、Babel、PostCSS 和 ESLint)。它会在当前目录自动推导入口文件——入口可以是 "),s("code",[e._v("main.js")]),e._v("、"),s("code",[e._v("index.js")]),e._v("、"),s("code",[e._v("App.vue")]),e._v(" 或 "),s("code",[e._v("app.vue")]),e._v(" 中的一个。你也可以显式地指定入口文件：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("vue serve MyComponent.vue\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"vue-build"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-build"}},[this._v("#")]),this._v(" vue build")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("Usage: build [options] [entry]\n\n在生产环境模式下零配置构建一个 .js 或 .vue 文件\n\nOptions:\n\n  -t, --target <target>  构建目标 (app | lib | wc | wc-async, 默认值：app)\n  -n, --name <name>      库的名字或 Web Components 组件的名字 (默认值：入口文件名)\n  -d, --dest <dir>       输出目录 (默认值：dist)\n  -h, --help             输出用法信息\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("vue build MyComponent.vue\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"创建一个项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建一个项目"}},[this._v("#")]),this._v(" 创建一个项目")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"vue-create"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-create"}},[this._v("#")]),this._v(" vue create")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("vue create hello-world\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("? Please pick a preset: (Use arrow keys) // 请选择预设:(使用箭头键)\n> default (babel, eslint) // 默认值(babel, eslint)\n  Manually select features // 手动选择功能\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("? Please pick a preset: Manually select features\n? Check the features needed for your project:\n>( ) Babel // 语法转换\n ( ) TypeScript // 强类型的语言,可转换成js\n ( ) Progressive Web App (PWA) Support // 增强WEB应用,可不受网络影响\n ( ) Router // 路由管理\n ( ) Vuex // 状态储存\n ( ) CSS Pre-processors // 选择CSS 预处理类型\n ( ) Linter / Formatter // 选择Linter / Formatter规范类型\n ( ) Unit Testing // 测试方式\n ( ) E2E Testing // 测试方式\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("Use class-style component syntax? // 使用类风格的组件语法\n? Use Babel alongside TypeScript (required for modern mode, auto-detected polyfills, transpiling JSX)? // 使用Babel和TypeScript(现代模式需要，自动检测填充，置换JSX)\n? Use history mode for router? (Requires proper server setup for index fallback in production) // 使用历史模式的路由器?(需要为生产环境中的索引备份进行适当的服务器设置)\n? Pick a CSS pre-processor (PostCSS, Autoprefixer and CSS Modules are supported by default): // 选择一个CSS预处理程序(PostCSS, Autoprefixer和CSS模块默认支持):\n  Sass/SCSS (with dart-sass)\n  Sass/SCSS (with node-sass)\n> Less\n  Stylus  \n\n\n? Pick a linter / formatter config: // 选择一个linter / formatter配置:\n> TSLint // 使用的typescript,所以选择这个\n  ESLint with error prevention only\n  ESLint + Airbnb config\n  ESLint + Standard config\n  ESLint + Prettier \n\n\n? Pick additional lint features: (Press <space> to select, <a> to toggle all, <i> to invert selection) // 选择额外的lint功能:(按选择，切换所有，反转选择)语法检测方式\n>(*) Lint on save // 保存检测\n ( ) Lint and fix on commit // fix和commit的时候检测\n\n\n? Pick a unit testing solution: (Use arrow keys) // 选择一个单元测试解决方案:(使用箭头键)\n> Mocha + Chai\n  Jest\n\n\n? Pick a E2E testing solution: (Use arrow keys) // 选择一个E2E测试解决方案:(使用箭头键)\n> Cypress (Chrome only)\n  Nightwatch (Selenium-based)\n\n\n? Where do you prefer placing config for Babel, PostCSS, ESLint, etc.? (Use arrow keys) // ?你喜欢把配置放在什么地方，比如Babel, PostCSS, ESLint等等?(用箭头键)\n> In dedicated config files // 在专用配置文件中的>\n  In package.json // 在package.json\n\n\n? Save this as a preset for future projects? (y/N) // 把它作为未来项目的预置?(y / N) yes的话需要输入名字,n就开始下载依赖创建项目\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v(" $ cd vueproject\n $ npm run serve\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"使用图形化界面"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用图形化界面"}},[this._v("#")]),this._v(" 使用图形化界面")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("vue ui\n")])])])}],!1,null,null,null);t.default=n.exports}}]);